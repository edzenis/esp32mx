name: Build & Publish OTA Firmware

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/**'

permissions:
  contents: write

concurrency:
  group: ota-build-main
  cancel-in-progress: true

jobs:
  build:
    runs-on: self-hosted

    steps:
      # 1) Checkout everything so we can commit later
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Verify Arduino CLI is present
      - name: Verify toolchain
        run: |
          command -v arduino-cli >/dev/null \
            || { echo "‚ùå arduino-cli missing"; exit 1; }
          arduino-cli version

      # 3) Clean slate
      - name: Reset build directory
        run: |
          rm -rf build
          mkdir build

      # 4) Compile exactly the src.ino file into build/
      - name: Compile firmware
        run: |
          arduino-cli core update-index
          arduino-cli core install esp32:esp32 || true
          arduino-cli compile \
            --fqbn esp32:esp32:esp32 \
            --output-dir build \
            src/src.ino

      # 5) Copy out just the .bin
      - name: Prepare firmware.bin
        run: |
          cp build/src.ino.bin build/firmware.bin
          ls -lh build/firmware.bin

      # 6) Commit & push if changed
      - name: Commit & Push firmware.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git remote set-url origin \
            "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git"
          git add build/firmware.bin
          if git diff --cached --quiet; then
            echo "‚ÑπÔ∏è No changes to firmware.bin ‚Äî skipping commit."
          else
            git commit -m "üîÑ Automated firmware build"
            git push origin HEAD:${{ github.ref_name }}
            echo "‚úîÔ∏è firmware.bin pushed."
          fi

      # 7) Upload via SCP using the mounted ~/.ssh
      - name: Upload firmware.bin to OTA server
        env:
          OTA_USER: root
          OTA_SERVER: 65.109.173.41
          OTA_PATH: /srv/firmware/firmware.bin
        run: |
          scp -i ~/.ssh/id_ed25519 \
              -o UserKnownHostsFile=~/.ssh/known_hosts \
              build/firmware.bin \
              $OTA_USER@$OTA_SERVER:$OTA_PATH
