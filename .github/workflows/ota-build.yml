name: Build & Publish OTA Firmware

on:
  # Manual ‚ÄúRun workflow‚Äù button in Actions UI
  workflow_dispatch:
  # Auto‚Äëbuild on any changes under src/
  push:
    paths:
      - 'src/**'

concurrency:
  group: ota-build-main
  cancel-in-progress: true

jobs:
  build:
    runs-on: self-hosted

    steps:
      # 1) Checkout your code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Clean out and recreate build/
      - name: Reset build directory
        run: |
          rm -rf build
          mkdir build

      # 3) Compile into build/
      - name: Compile firmware
        run: |
          arduino-cli core update-index
          arduino-cli core install esp32:esp32
          arduino-cli compile \
            --fqbn esp32:esp32:esp32 \
            --output-dir build \
            src

      # 4) Isolate only the firmware image
      - name: Prepare firmware.bin
        run: |
          if [ ! -f build/src.ino.bin ]; then
            echo "‚ùå build/src.ino.bin not found"
            exit 1
          fi
          mv build/src.ino.bin build/firmware.bin
          ls -lh build/firmware.bin

      # 5) Commit & push via plain git
      - name: Commit & Push firmware.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add build/firmware.bin
          git diff --quiet --exit-code || git commit -m "üîÑ Automated firmware build for version $(cat version.txt)"
          git push origin HEAD:main
